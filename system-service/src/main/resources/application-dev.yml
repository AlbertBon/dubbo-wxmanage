spring:
#  redis:
#  # Redis数据库索引（默认为0）
#    database: 0
#  # Redis服务器连接密码（默认为空）
#    password:
#  # 连接池最大连接数（使用负值表示没有限制）
#    pool.max-active: 8
#  # 连接池最大阻塞等待时间（使用负值表示没有限制）
#    pool.max-wait: 5000
#  # 连接池中的最大空闲连接
#    pool.max-idle: 8
#  # 连接池中的最小空闲连接
#    pool.min-idle: 0
#  # 连接超时时间（毫秒）
#    timeout: 0
#    cluster:
#      nodes:
#        - 192.168.1.102:6379
#        - 192.168.1.103:6379
#        - 192.168.1.107:6379
#        - 192.168.1.108:6379
#        - 192.168.1.109:6379
#        - 192.168.1.110:6379

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/wxmanage?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false&&zeroDateTimeBehavior=convertToNull
    name: wxmanage
    username: root
    password: root
    initialSize: 5    # 初始化大小
    minIdle: 5        # 最小
    maxActive: 20     # 最大
    maxWait: 60000    # 获取连接等待超时的时间
    timeBetweenEvictionRunsMillis: 60000    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 300000      # 配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true                    # 打开PSCache
    maxPoolPreparedStatementPerConnectionSize: 20   # 指定每个连接上PSCache的大小
    filters: stat,wall,log4j                        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  # 通过connectProperties属性来打开mergeSql功能；慢SQL记录

#redis配置
  redis:
    host: 127.0.0.1
    port: 6379
    database: 0
    password:
#
##多数据源 1主2从
#datasource:
# #从库数量
#  readSize: 2
#   # 使用druid数据源
#  type: com.alibaba.druid.pool.DruidDataSource
##主库
#  write:
#    url: jdbc:mysql://192.168.1.106:3306/shiro?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT
#    username: root
#    password: Sxj19961226.
#    driver-class-name: com.mysql.jdbc.Driver
#    filters: stat
#    maxActive: 20
#    initialSize: 10
#    maxWait: 60000
#    minIdle: 1
#    timeBetweenEvictionRunsMillis: 60000
#    minEvictableIdleTimeMillis: 300000
#    validationQueryTimeout: 900000
#    validationQuery: SELECT SYSDATE() from dual
#    testWhileIdle: true
#    testOnBorrow: false
#    testOnReturn: false
#    poolPreparedStatements: true
#    maxOpenPreparedStatements: 20
#  read1:
#    url: jdbc:mysql://192.168.1.111:3306/shiro?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT
#    username: root
#    password: Sxj19961226.
#    driver-class-name: com.mysql.jdbc.Driver
#    filters: stat
#    maxActive: 20
#    initialSize: 1
#    maxWait: 60000
#    minIdle: 1
#    timeBetweenEvictionRunsMillis: 60000
#    minEvictableIdleTimeMillis: 300000
#    validationQueryTimeout: 900000
#    validationQuery: SELECT SYSDATE() from dual
#    testWhileIdle: true
#    testOnBorrow: false
#    testOnReturn: false
#    poolPreparedStatements: true
#    maxOpenPreparedStatements: 20
#  read2:
#    url: jdbc:mysql://192.168.1.112:3306/shiro?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT
#    username: root
#    password: Sxj19961226.
#    driver-class-name: com.mysql.jdbc.Driver
#    filters: stat
#    maxActive: 20
#    initialSize: 1
#    maxWait: 60000
#    minIdle: 1
#    timeBetweenEvictionRunsMillis: 60000
#    minEvictableIdleTimeMillis: 300000
#    validationQueryTimeout: 900000
#    validationQuery: SELECT SYSDATE() from dual
#    testWhileIdle: true
#    testOnBorrow: false
#    testOnReturn: false
#    poolPreparedStatements: true
#    maxOpenPreparedStatements: 20
